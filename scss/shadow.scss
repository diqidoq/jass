$o: null;
@if $override == yes {
  $o: !important;
}

@function str-split($string, $separator) {
    // empty array/list
    $split-arr: ();
    // first index of separator in string
    $index : str-index($string, $separator);
    // loop through string
    @while $index != null {
        // get the substring from the first character to the separator
        $item: str-slice($string, 1, $index - 1);
        // push item to array
        $split-arr: append($split-arr, #{$item}px);
        // remove item and separator from string
        $string: str-slice($string, $index + 1);
        // find new index of separator
        $index : str-index($string, $separator);
    }
    // add the remaining string to list (the last item)
    $split-arr: append($split-arr, #{$string}px);
    @return $split-arr;
}

@mixin shadow ($shadow) {
  -webkit-box-shadow: $shadow;
     -moz-box-shadow: $shadow;
          box-shadow: $shadow;
}

// Box shadow reset
.noshadow, .nsdw {
  @include shadow (none $o)
}

$n: null;
$c: null;
$i: 1;
@each $name, $hexcodes in $color-preset {
  $j: 1;
  @each $c in $hexcodes {
    @if $index-classes == yes {
      @if $cg { $n: c#{$i}; } @else { $n: c#{$i}-#{$j}; }
    } @else if $color-label == name { 
      @if $cg { $n: #{$c}; } @else { $n: #{$name}#{$j}; }
      } @else if $color-label == code {
      $n: #{$c};
      } @else { @error "colorlabel setting must be either > name or > code.";
    }
    @each $shadow in $shadows {
      $v: str-split($shadow, "-");
     .sdw-#{$shadow} { @include shadow ($v$o); }
     .sdw-#{$shadow}-#{$n} {
        $v: $v ##{$c}; @include shadow ($v$o);
     }
   }
   $j: $j + 1;
  }
  $i: $i + 1;
}
