// choose where the different LESS components are located.
$dir: "components/"

// Choose the components you want to use. Don't mix the order of setting lines.
// Otherwise comment the components and its leading settings out (//).
// Reduce the "step" settings to have a smaller footprint and less altering classes.

// Use the first 3 items in list to define 
// the black and white point tendency of your color profile.
// It is recommended to use web safe colors like 5599FF or 59F.
// Expand or compress color theme like you want.
// It is up to you how many colors you use.
// Default is a preset of 5 color sets from dark, mid to bright.
// c = background-color, tc = color, bc = border-color
// Or enable full websafe color stack for testing.
$enable-websafe-colors-fullstack: no; // 4100 3hex colors!
$enable-websafe-colors-preset: yes; // recommended

@if $enable-websafe-colors-preset == yes {
  // Choose your ready websafe color preset
  $websafe-colors-preset: 
    334, 99A, EEF, // grey & blackpoint
    A18, F0C, EBF, // rose
    15C, 69F, CDF, // blue
    5A0, 8F0, CF9, // green
    C05, F06, FBB, // red
    940, D83, FED  // gold
  ;
}

@if $enable-websafe-colors-fullstack == yes {
  // Or make a full stack of websafe colors available by
  // uncommenting here & choose the hex steps of each channel.
  // Beware that the full list is over 4000! hex codes.
  $red: (0 1 2 3 4 5 6 7 8 9 A B C D E F);
  $green: (0 1 2 3 4 5 6 7 8 9 A B C D E F);
  $blue: (0 1 2 3 4 5 6 7 8 9 A B C D E F);
}

$override: no; /* yes/no > !important */
@import "${dir}/color";

// Shadows and Shadow Effects
$shadows: 
"0-0-2",
"0-0-4",
"0-0-6",
"0-2-2",
"0-2-4"
;
// Each shadow is present with and without color definition.
// This way you can create shadows based on text color inheritance.
// Usually you want to pass colors to shadow colors.
// But feel free to change the color profile for shadows here.
$shadow-colors: $colors;
$override: no; /* yes/no > !important */
@import "${dir}/shadow";

// Border and Radius
$border-width-units: 1,2,3,4,5,6,10,20;
$border-radius_units: 2,3,4,5,6,7,8,20,50,100;
$override: no; /* yes/no > !important */
@import "${dir}/border";

// Layouts (sets - we do not use the term grid. [README])
// Fixed and Fluid - feel free to add/replace with your own layouts.
// Width of bars is relative to set and count of bars.
// in/de-crease the amount of bars to create different resolutions.
$bars: 24; // units of divisions inside
$sets-fixed:
576, // each bars width in px: 24
768, // each bars width in px: 32
960, // each bars width in px: 40
// 1200, // each bars width in px: 50
1440, // each bars width in px: 60
// 1680, // each bars width in px: 70
1920, // each bars width in px: 80
// 2160, // each bars width in px: 90
// 2400 // each bars width in px: 100
;
$sets-fluid: 80, 90, 100;
$break-points: $sets-fixed;
$override: no; /* yes/no > !important */
@import "${dir}/layout";

// Margin & Padding and Min/Max Height/Width helper classes
$override-spacing: no;
$override-sizing: no;
$init-spacing: 2;  // px
$init-sizing: 50; // px
$steps-spacing: 16;
$steps-sizing: 8;
$sizing-relative: 25,50,75,100; // %
$override: no; /* yes/no > !important */
@import "${dir}/spacing";

// Helper Classes
@import "${dir}/helper";
