@use "sass:math";
@use "sass:list";
@use "sass:string";
@use "sass:map";
@use "sass:meta";
@use "sass:selector";

// enable trailing class addition for child elements.
// can be set for each component seperately, see below.
$enable-child-selectors: no; // yes/no (default:no)
$child-selector-extension: "--c > *"; // creates: "myclass--c > *"

// Choose the components you want to use. Don't mix the order of setting lines.
// Comment the components and its leading settings out (//) if you do not need them.
// Reduce the "step" settings to have a smaller footprint and less altering classes.

// ############ color component ############### //
// ---------------------------------------------//

// Recommended! (instead of $enable-websafe-colors-fullstack below).
// This minimizes the color palette and ccs color component file size.
$enable-websafe-colors-preset: yes;
// Choose your color palettes and shades of them.
// Default is 5 brightness shades of each nuance here.
// Feel free to extend or minify from 5 to 2 or 3 to 6, etc.
// Use the first row in list defines the 
// black and white point tendency of your color profile.
// It is recommended to use web safe colors like 5599FF or 59F.
// It is up to you how many colors you use and how you group them.
// Default is a preset of 6 color sets.
$websafe-colors-preset: 
222, 555, 999, CCC, FFF, // grey
607, A0A, E0F, E5F, EAF, // rose
029, 04B, 36E, 69F, BCF, // blue
072, 5A0, 7E0, BF4, CF9, // green
903, C05, F06, F68, FBC, // red
630, 940, D83, FC7, EDC  // gold
;

// Enable websafe colors full-stack.
// Note: this creates 4100 HEX color codes if all red green blue steps are chosen.
// Disables $enable-websafe-colors-preset automatically.
$enable-websafe-colors-fullstack: no; // Default: no.
// Therefor you need to choose the HEX steps included per channel below.
// Hint: modern websites barely use blacks below #222.
// Be warned: each step creates many multiplying css lines.
// Use full stack colors only for advanced projects or for color scheme testing.
// Then switch back to $enable-websafe-colors-fullstack: no;
// and make sure $enable-websafe-colors-preset: yes;
$red: (0 1 2 3 4 5 6 7 8 9 A B C D E F); 
$green: (0 1 2 3 4 5 6 7 8 9 A B C D E F);
$blue: (0 1 2 3 4 5 6 7 8 9 A B C D E F);

// Choose color classes to target containing header elements.
// Creates additional header color classes with a trainling <h> element target
// in the selector so that you can color all headers in the inner elements group.
// Hint: small headers like h5, h6 barely stand out or need to be colored.
$colored-headers: 'h1,h2,h3,h4';

// Creates additional link color classes with a trainling <a> element target
// in the selector so that you can color all links in the inner elements group.
$colored-links: yes;

// Not recommended settings for big components like color:
$enable-child-selectors: no; // yes/no (default:no)
$override: no; // yes/no > !important  (default:no)

// Make additional classes with trailing index numbers available
// for $websafe-colors-preset only (not for full-stack).
// Useful to keep class names functioning by replacing color palettes.
$index-classes: yes; // yes/no (default: yes)
@import "color";

// ############ shadow component ############### //
// ----------------------------------------------//

// Shadows and Shadow Effects
$shadows: 
"0-0-2",
"0-0-4",
"0-0-6",
"0-2-2",
"0-2-4"
;
// Each shadow is present with and without color definition.
// This way you can create shadows based on text color inheritance.
// Usually you want to pass colors to shadow colors.
// But feel free to change the color profile for shadows here.
$shadow-colors: $websafe-colors-preset;
$enable-child-selectors: no; // yes/no (default:no)
$override: no; // yes/no > !important
@import "shadow";

// ############ border component ############### //
// ----------------------------------------------//

// Border and Radius
$border-width-units: 1,2,3,4,5,6,10,20;
$border-radius_units: 2,3,4,5,6,7,8,20,50,100;
$enable-child-selectors: no; // yes/no (default:no)
$override: no; // yes/no > !important
@import "border";

// ############ layout component ############### //
// ----------------------------------------------//

// Layouts (sets - we do not use the term grid. [README])
// Fixed and Fluid - feel free to add/replace with your own layouts.
// Width of bars is relative to set and count of bars.
// in/de-crease the amount of bars to create different resolutions.
$bars: 24; // units of divisions inside
$sets-fixed:
576, // each bars width in px: 24
768, // each bars width in px: 32
960, // each bars width in px: 40
// 1200, // each bars width in px: 50
1440, // each bars width in px: 60
// 1680, // each bars width in px: 70
1920, // each bars width in px: 80
// 2160, // each bars width in px: 90
// 2400 // each bars width in px: 100
;
$sets-fluid: 80, 90, 100;
$break-points: $sets-fixed;
$enable-child-selectors: no; // yes/no (default:no)
$override: no; // yes/no > !important
@import "layout";

// ############ spacing component ############### //
// -----------------------------------------------//

// Margin & Padding and Min/Max Height/Width classes.
$steps-spacing: 16; $init-spacing: 4; // px
$steps-sizing: 8; $init-sizing: 50;  // px
$sizing-relative: 25,50,75,100; // %

$enable-child-selectors: no; // yes/no (default:no)
$index-classes: yes; // makes additional classes like m1, m2 available.
$override-spacing: no; // yes/no > !important
$override-sizing: no; // yes/no > !important
@import "spacing";

// ############ typography component ############### //
// --------------------------------------------------//

// Anything around css text- and font- classes inkls sizes and weight and more.
$enable-child-selectors: yes; // yes/no (default:no)
$override: no; // yes/no > !important
@import "typography";

// ############ tools component ############### //
// ---------------------------------------------//

// Tools is a collection of often used css in combination with other components.
// Like: cfx (clearfix) or oh (overflow-hidden), fl float-left, center-x, center-y etc.
$enable-child-selectors: yes; // yes/no (default:no)
$z-indexes: -999,-1,1,2,3,4,5,6,7,8,9,100,300,999;
$override: no; // yes/no > !important
@import "tools";
